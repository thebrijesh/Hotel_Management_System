server:
    port: 8090

spring:
    datasource:
      url: jdbc:mysql://localhost:3306/microservices
      username: root
      password: 395010
      driver-class-name: com.mysql.cj.jdbc.Driver

    jpa:
      hibernate:
        ddl-auto: update
      show-sql: true
      properties:
        hibernate:
          dialect: org.hibernate.dialect.MySQLDialect


    config:
      import: configserver:http://localhost:5555

    security:
      oauth2:
        resource server:
          jwt:
            issuer-uri: https://dev-01778054.okta.com/oauth2/default
        client:
          registration:
            my-internal-client:
              provider: okta
              authorization-grant-type: client_credentials
              scope: internal
              client-id: 0oangz9yg9xtIIYr35d7
              client-secret: I3Qe1H7SR6Ak9AG-tUSrvJ-7rT5GCygmXP8C4hMgTFGeY2-UEQdIbzMGuPbWqN6Q

          provider:
            okta:
              issuer-uri: https://dev-01778054.okta.com/oauth2/default

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always



resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 21
        timeout-duration: 2s


okta:
  oauth2:
    issuer: https://dev-01778054.okta.com/oauth2/default
    audience: api://default